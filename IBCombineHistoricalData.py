import glob
import os
import re

#The logic in this file combines the data files generated by IBDownloadHistoricalData which
#looks like 1.txt, 2.txt.... in a folder where each file has many lines of minute data

# these logic allows files to be sorted in natural order
digits = re.compile(r'(\d+)')
def tokenize(filename):
    return tuple(int(token) if match else token
                 for token, match in
                 ((fragment, digits.search(fragment))
                  for fragment in digits.split(filename)))

#pull out date, time, closePrice
def parseLine(line):
    print line

#date = 20150307  02:00:00 open=1.2615 high=1.2616 low=1.2615 close=1.26155

if __name__ == "__main__":
    dataPath = "C:/Dropbox/CninSrc/JTS/TWS API/samples/Java/Data/CAD/BID/"
    outFile = "C:/Dropbox/CninSrc/JTS/TWS API/samples/Java/Data/CAD_BID.txt"

    files = os.listdir(dataPath)
    files.sort(key=tokenize) #this allows files to be sorted in natural order eg 1.txt, 2.txt ... 10.txt instead of 1.txt 10.txt 2.txt etc
    files.reverse() #this makes it reverse natural order

    #TODO open outFile

    for file in files:
        print file
        f = open (dataPath+file, 'r')
        lines = f.readlines()
        for line in lines:
            date, time, closePrice = parseLine(line)
            #TODO write to outFile

